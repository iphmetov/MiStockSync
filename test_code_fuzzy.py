#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—á–µ—Ç–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

–í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–æ–∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –¥–æ 20
–≤–º–µ—Å—Ç–æ –ø–æ–ª–Ω–æ–≥–æ —Ñ–∞–π–ª–∞. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Ç–µ–Ω —Å—Ç—Ä–æ–∫.
"""

import sys
import os
import pandas as pd
import difflib

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–æ–¥—É–ª—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import MiStockSyncApp, TRSH

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ (–±–µ–∑ GUI)
app = MiStockSyncApp(None)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –í–∏—Ç–∏ (–Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫)
app.current_config = "vitya"

# –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
# –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 20 —Å—Ç—Ä–æ–∫
# –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ —Å—Ç—Ä–æ–∫, –∏–∑–º–µ–Ω–∏—Ç–µ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
MAX_TEST_ROWS = 20  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –Ω–µ—á–µ—Ç–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
print("=" * 80)
print(f"üìä –¢–µ–∫—É—â–∏–π –ø–æ—Ä–æ–≥ —Å—Ö–æ–∂–µ—Å—Ç–∏ (TRSH): {TRSH:.1%}")
print(f"üìä –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: –º–∞–∫—Å–∏–º—É–º {MAX_TEST_ROWS} —Å—Ç—Ä–æ–∫")
print("=" * 80)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ excel_loader –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
try:
    print("üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ excel_loader...")

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    base_file = "data/base_–û–°–ù–û–í–ê 30.07.2025.xlsx"
    if os.path.exists(base_file):
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É: {base_file}")
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º excel_loader –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
            from excel_loader.loader import load_with_config

            base_df = load_with_config(base_file, "base")
            print(f"   üìä –ë–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(base_df)} —Å—Ç—Ä–æ–∫")
            print(f"   üìã –ö–æ–ª–æ–Ω–∫–∏: {list(base_df.columns)}")
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ excel_loader: {e}")
            print("   üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é...")
            base_df = pd.read_excel(base_file)
            print(f"   üìä –ë–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(base_df)} —Å—Ç—Ä–æ–∫")
            print(f"   üìã –ö–æ–ª–æ–Ω–∫–∏: {list(base_df.columns)}")
    else:
        print(f"‚ùå –§–∞–π–ª –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω: {base_file}")
        base_df = None

    # –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –í–∏—Ç–∏
    vitya_file = "data/JHT_Xiaomi_–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã31.07xlsx.xlsx"
    if os.path.exists(vitya_file):
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –í–∏—Ç–∏: {vitya_file}")
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º excel_loader –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
            vitya_df = load_with_config(vitya_file, "vitya")
            print(f"   üìä –í–∏—Ç—è —Å–æ–¥–µ—Ä–∂–∏—Ç {len(vitya_df)} —Å—Ç—Ä–æ–∫")
            print(f"   üìã –ö–æ–ª–æ–Ω–∫–∏: {list(vitya_df.columns)}")

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if len(vitya_df) > MAX_TEST_ROWS:
                print(f"   üîÑ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ {MAX_TEST_ROWS} —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                vitya_df = vitya_df.head(MAX_TEST_ROWS)
                print(f"   üìä –ü–æ—Å–ª–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {len(vitya_df)} —Å—Ç—Ä–æ–∫")
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ excel_loader: {e}")
            print("   üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é...")
            vitya_df = pd.read_excel(vitya_file)
            print(f"   üìä –í–∏—Ç—è —Å–æ–¥–µ—Ä–∂–∏—Ç {len(vitya_df)} —Å—Ç—Ä–æ–∫")
            print(f"   üìã –ö–æ–ª–æ–Ω–∫–∏: {list(vitya_df.columns)}")

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if len(vitya_df) > MAX_TEST_ROWS:
                print(f"   üîÑ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ {MAX_TEST_ROWS} —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                vitya_df = vitya_df.head(MAX_TEST_ROWS)
                print(f"   üìä –ü–æ—Å–ª–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {len(vitya_df)} —Å—Ç—Ä–æ–∫")
    else:
        print(f"‚ùå –§–∞–π–ª –í–∏—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {vitya_file}")
        vitya_df = None

    # –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –î–∏–º—ã
    dimi_file = "data/DiMi_Opt_Price.xlsx_31-07.xlsx"
    if os.path.exists(dimi_file):
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –î–∏–º—ã: {dimi_file}")
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º excel_loader –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
            dimi_df = load_with_config(dimi_file, "dimi")
            print(f"   üìä –î–∏–º–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(dimi_df)} —Å—Ç—Ä–æ–∫")
            print(f"   üìã –ö–æ–ª–æ–Ω–∫–∏: {list(dimi_df.columns)}")

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if len(dimi_df) > MAX_TEST_ROWS:
                print(f"   üîÑ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ {MAX_TEST_ROWS} —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                dimi_df = dimi_df.head(MAX_TEST_ROWS)
                print(f"   üìä –ü–æ—Å–ª–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {len(dimi_df)} —Å—Ç—Ä–æ–∫")
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ excel_loader: {e}")
            print("   üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é...")
            dimi_df = pd.read_excel(dimi_file)
            print(f"   üìä –î–∏–º–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(dimi_df)} —Å—Ç—Ä–æ–∫")
            print(f"   üìã –ö–æ–ª–æ–Ω–∫–∏: {list(dimi_df.columns)}")

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if len(dimi_df) > MAX_TEST_ROWS:
                print(f"   üîÑ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ {MAX_TEST_ROWS} —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                dimi_df = dimi_df.head(MAX_TEST_ROWS)
                print(f"   üìä –ü–æ—Å–ª–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {len(dimi_df)} —Å—Ç—Ä–æ–∫")
    else:
        print(f"‚ùå –§–∞–π–ª –î–∏–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {dimi_file}")
        dimi_df = None

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    base_df = None
    vitya_df = None
    dimi_df = None

print("\n" + "=" * 80)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é compare_by_fuzzy_string_matching
if base_df is not None and vitya_df is not None:
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ compare_by_fuzzy_string_matching")
    print("-" * 50)

    # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –í–∏—Ç–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    try:
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        processed_vitya = app.preprocess_vitya_fixed_v3(vitya_df.copy())
        print(f"‚úÖ –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –í–∏—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ—Å—Ç–∞–ª–æ—Å—å {len(processed_vitya)} —Å—Ç—Ä–æ–∫")

        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ—á–µ—Ç–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
        result = app.compare_by_fuzzy_string_matching(processed_vitya, base_df, "vitya")

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print(f"‚úÖ –§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ —Å–ø–∏—Å–æ–∫ —Å {len(result)} —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏")

        if len(result) > 0:
            print(f"\nüìã –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:")
            for i, match in enumerate(result[:5]):
                print(
                    f"  {i+1}. '{match['supplier_name'][:50]}...' -> '{match['base_name'][:50]}...' "
                    f"(—Å—Ö–æ–∂–µ—Å—Ç—å: {match['similarity_ratio']:.2%})"
                )
        else:
            print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞—à–ª–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ compare_by_fuzzy_string_matching: {e}")

print("\n" + "=" * 80)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é find_item_by_fuzzy_matching
if base_df is not None:
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ find_item_by_fuzzy_matching")
    print("-" * 50)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    app.base_df = base_df

    # –¢–µ—Å—Ç–æ–≤—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
    test_names = [
        '–ú–æ–Ω–∏—Ç–æ—Ä Xiaomi Redmi Display 27" G PRO 27Q  180Hz (P27QDA-RGP)',
        "–°–º–∞—Ä—Ç-—á–∞—Å—ã Xiaomi Redmi Watch 5  (M2462W1) EU",
        "USB Flash –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å Xiaomi U-Disk Thumb Drive 64 –ì–± (XMUP21YM)",
        "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∞—è –ø–µ—á—å Xiaomi Mijia Microwave Oven (MWB020) 20L",
        "–ü–∞—Ä–æ–≤–∞—Ä–∫–∞ Xiaomi Mijia Multifunctional Electric Steamer S1 (MES03) 13L",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–∞—à–∏–Ω–∞ –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —Å–æ–µ–≤–æ–≥–æ –º–æ–ª–æ–∫–∞ Mijia (MJDJJ01DEM) 1L",
        "–ú–∞—Å—Å–∞–∂–Ω—ã–π –ø–∏—Å—Ç–æ–ª–µ—Ç Mijia Fascia Gun 3 Mini   (MJJMQ07YM)",
        "–ú—É–ª—å—Ç–∏—Å—Ç–∏–ª–ª–µ—Ä SenCiciMen X9 Pro EU   New!!!(–° –ø–ª—ë–Ω–∫–∞!!)",
        "–£–º–Ω—ã–π –±–ª–µ–Ω–¥–µ—Ä —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –Ω–∞–≥—Ä–µ–≤–∞Xiaomi Miiia Smart Sound Blender S2 (MJPBJ02DEM) 1.5L",
    ]

    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(test_names)} –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤...")

    for i, test_name in enumerate(test_names, 1):
        try:
            found_name, row_number, color, price = app.find_item_by_fuzzy_matching(
                test_name
            )

            # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å—Ö–æ–∂–µ—Å—Ç–∏
            if found_name != "–ù–µ –Ω–∞–π–¥–µ–Ω–æ":
                similarity = difflib.SequenceMatcher(
                    None, test_name.lower(), found_name.lower()
                ).ratio()
                similarity_percent = f"{similarity:.2%}"
            else:
                similarity_percent = "N/A"

            print(
                f"  {i}. '{test_name[:40]}...' -> '{found_name[:40]}...' "
                f"(—Å—Ç—Ä–æ–∫–∞: {row_number}, —Ü–≤–µ—Ç: {color}, —Ü–µ–Ω–∞: {price}, —Å—Ö–æ–∂–µ—Å—Ç—å: {similarity_percent})"
            )
        except Exception as e:
            print(f"  {i}. ‚ùå –û—à–∏–±–∫–∞: {e}")


print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
